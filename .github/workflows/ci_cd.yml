name: CI_CD
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
jobs:
  test_build_review:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: node version
        uses: actions/setup-node@v2
        with:
          node-version: "15"

      - name: resolve dependencies
        run: yarn install --frozen-lockfile

      - name: test
        run: yarn test -- --coverage
        env:
          CI: true
      - uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage

      - name: build
        run: yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

      - run: ls -la

      - name: deploy to staging
        if: github.event_name =='pull_request' && github.ref == 'ref/heads/master'
        run: npx surge --project ./build --domain esii2021-1.samuelclerod.surge.sh
        env:
          SURGE_LOGIN: ${{secrets.SURGE_LOGIN}}
          SURGE_TOKEN: ${{secrets.SURGE_TOKEN}}

      - name: deploy to production
        if: github.event_name =='push' && github.ref == 'ref/heads/master'
        run: npx surge --project ./build --domain esii2021-1.samuelclerod.surge.sh
        env:
          SURGE_LOGIN: ${{secrets.SURGE_LOGIN}}
          SURGE_TOKEN: ${{secrets.SURGE_TOKEN}}
